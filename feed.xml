<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mahesh Kumar Kolla</title>
    <description></description>
    <link>http://maheshkkolla.github.io/</link>
    <atom:link href="http://maheshkkolla.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 07 May 2021 23:01:44 +0530</pubDate>
    <lastBuildDate>Fri, 07 May 2021 23:01:44 +0530</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>DynamoDB backup to a different AWS account</title>
        <description>&lt;p&gt;One of the well known ways to backup AWS DynamoDB is to use Data Pipelines and EMR. 
But there are few disadvantages with this approach like creation of temporary EC2 instance, 
using provisioned read capacity of the DynamoDB table for backup and it could take a lot of time to backup 
depends on the size of data, size of EC2 instance and provisioned read capacity etc., 
Overall this could even lead to high costs and less maintainable.&lt;/p&gt;

&lt;p&gt;AWS has released a feature “Export to S3” which solves a lot these problems. 
This is a complete serverless solution. Hence it is scalable and performant. 
Exporting feature does not consume provisioned read capacity of the table, as a result it has no impact on the performance and availability of the Dynamo table.&lt;/p&gt;

&lt;h1 id=&quot;how-to-backup&quot;&gt;How to backup?&lt;/h1&gt;

&lt;h3 id=&quot;enable-pitr-point-in-time-recovery&quot;&gt;Enable PITR (Point in time recovery)&lt;/h3&gt;

&lt;p&gt;First we need to enable the PITR (Point in time recovery) on the DynamoDB.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Go to the Dynamo table in the console&lt;/li&gt;
  &lt;li&gt;Navigate to Backups tab&lt;/li&gt;
  &lt;li&gt;You see an option to enable to PITR as below image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/tech/dynamo-backup/pitr.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From Terraform: Add this block to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws_dynamodb_table&lt;/code&gt; resource&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-hcl-terraform&quot;&gt;  point_in_time_recovery {
    enabled = true
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;export-to-s3&quot;&gt;Export to S3&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Go to “Exports and streams” tab in the Dynamo table page&lt;/li&gt;
  &lt;li&gt;Click on “Export to S3” button&lt;/li&gt;
  &lt;li&gt;Select the S3 bucket where you want to export&lt;/li&gt;
  &lt;li&gt;Click on Export button&lt;/li&gt;
  &lt;li&gt;You can see the status of the export&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cross-account-backup&quot;&gt;Cross account backup&lt;/h4&gt;

&lt;p&gt;There are 2 ways to do the cross account backup&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You can choose the different AWS account while selecting the S3 bucket and give permissions according to that&lt;/li&gt;
  &lt;li&gt;You can export to an S3 bucket present in the current account and enable CRR (Cross Region Replication) to replicate the objects to another account&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/tech/dynamo-backup/export.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/tech/dynamo-backup/export-page.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;automating-the-backups-on-specific-intervals&quot;&gt;Automating the backups on specific intervals&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Create a lambda&lt;/li&gt;
  &lt;li&gt;Write code to “Export to S3” using aws-sdk
Example code in JS (using aws-sdk version 3).
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dynamoDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exportTableToPointInTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;TableArn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;S3Bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Schedule the lambda run using CloudWatch event rules (using schedule cron or rate expressions)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-to-restore-the-backup&quot;&gt;How to restore the backup?&lt;/h1&gt;

&lt;p&gt;There is no direct import option similar to export option as above. 
Hopefully AWS will come up with straight forward import to DynamoDB. 
But for now, we have to manually read the data from S3 objects and insert into the DynamoDB table as part of restore process.&lt;/p&gt;

&lt;p&gt;We can use traditional Data Pipelines to restore or Create a script&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stream backup files from S3&lt;/li&gt;
  &lt;li&gt;Each Dynamo item stores as a single line in the backed up file&lt;/li&gt;
  &lt;li&gt;Insert these objects into the table using sdk.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-is-the-cost-of-backup&quot;&gt;What is the Cost of backup?&lt;/h1&gt;

&lt;p&gt;This is not a table scan solution, no extra infra/server. 
So, the cost of this solution is less comparing with Data Pipelines solution.&lt;/p&gt;

&lt;p&gt;Taking the example of US east          &lt;br /&gt;
For PITR    - $0.20 per GB-month        &lt;br /&gt;
For export  - $0.10 per GB per export           &lt;br /&gt;
and additional S3 cost.&lt;/p&gt;

</description>
        <pubDate>Fri, 07 May 2021 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/tech/2021/05/07/dynamodb-backup.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/tech/2021/05/07/dynamodb-backup.html</guid>
        
        <category>aws</category>
        
        <category>dynamoDB</category>
        
        <category>backup</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>క్రిమి తెచ్చిన కష్టాలు</title>
        <description>&lt;pre&gt;
ఔషదాలు వందలు 
ప్రాణ వాయువు పదివేలు 
సూది మందులు లక్షలు 
ఠికాలు అసలు దొరకనే లేవు  

క్రిమి తెచ్చింది ఈ కష్టాలు 
చెమటలు పట్టిస్తున్న చావు భయాలు 
బ్రతకడానికి మన పరుగులు 
ఇంకెంతకాలం ఈ అవస్థలు  

ఇకనైనా తెరుద్దాం మన కళ్ళు 
తెలుసుకుందాం మన భాద్యతలు 
మారుద్దాం మన జీవన విధానాలు 
వచ్చేస్తున్నాయి మంచి రోజులు 
&lt;/pre&gt;
</description>
        <pubDate>Tue, 04 May 2021 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/non-tech/2021/05/04/corona.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/non-tech/2021/05/04/corona.html</guid>
        
        <category>mythoughts</category>
        
        <category>corona</category>
        
        
        <category>non-tech</category>
        
      </item>
    
      <item>
        <title>Bargaining?</title>
        <description>&lt;p&gt;I have seen quite a few videos recently on the topic of bargaining at street/small vendors. Today, I have seen another video on Facebook. A couple goes to a coconut vendor to buy a coconut. The wife bargains the coconut which the husband does not like it. Another situation, giving the tip to the food delivery guy and here again, the wife insists not to give the tip. Finally, the husband decides to teach her the lesson. They go to a fancy restaurant and the husband starts bargaining the food at the restaurant. The wife feels embarrassed and the husband teaches her the lesson. At the end of the video, he said that he never had money to donate and he sees this (not bargaining at small vendors and tips for food delivery guys) as a micro-donations and he requests everyone to do so…&lt;/p&gt;

&lt;p&gt;Now take a pause and thinking about it before you read my thoughts on it……&lt;/p&gt;

&lt;p&gt;I grew up in a situation where bargaining was necessary. Every rupee that we save from bargaining would give me food for another day.  My mother and I used to go to buy clothes for myself. The price of a dress for me used to be 2000 bucks. After bargaining, We finally end up buying it at 200 or 250 bucks. Think about it…. where is 200 or 250 bucks and 2000 bucks? 10% of it. 2000 rupees were one and half month salary for my mother.&lt;/p&gt;

&lt;p&gt;Wait… I know what you are going to say…
“No one asks the poor to buy at high prices or not to bargain… 
Follow only If you think you have at least a little more money than the basic needs”&lt;/p&gt;

&lt;p&gt;But this is the actual problem…
People who have money, spend everything they want without any issues or bargaining. Do you think the shopkeepers keep their products for the poor to bargain? They would sell it to people who can buy at high prices. They would not allow to bargain or not more than to some extent. This is what makes the poor poorer. People who could eat twice a day can eat only once a day. Take the previous example of the dress price from 2000 to 200 bucks. If we did not get it in our greatest budget of 300 to 400 bucks then I had to roam around naked (obviously not :P). But I would not have the uniform and would not be able to go to school for sure. Think about this in other situations like vegetables, milk, rent, groceries, medicines, school fees, uniform, clothes, etc., etc.,&lt;/p&gt;

&lt;p&gt;Who would buy at street/small vendors? It is the poor or middle class families. My first question would be if you are concerned about them then why would you even go to that fancy restaurant? There are better options like stop spending on luxury, super markets, online home deliveries and buy from locals, feed someone, educate someone, donate for medication etc.,&lt;/p&gt;

&lt;p&gt;I am not asking you to bargain for everything or to follow the other options above. This is my opinion and I want to bring this perspective in people as I have faced this situation. Everything has many angles and different consequences. Try to think before making the decision or at least before asking a whole lot of people to follow something.&lt;/p&gt;

</description>
        <pubDate>Sun, 25 Oct 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/non-tech/2020/10/25/bargaining.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/non-tech/2020/10/25/bargaining.html</guid>
        
        <category>mythoughts</category>
        
        <category>life</category>
        
        
        <category>non-tech</category>
        
      </item>
    
      <item>
        <title>Rename AWS S3 bucket in terraform</title>
        <description>&lt;p&gt;There is no direct way to rename a S3 bucket from console or from terraform.
We have create a new bucket, copy the content and delete the old bucket.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;create-a-new-bucket&quot;&gt;Create a new bucket&lt;/h4&gt;

    &lt;p&gt;Go to AWS console and create the new bucket manually by copying the bucket settings from old bucket&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;sync-the-buckets&quot;&gt;Sync the buckets&lt;/h4&gt;

    &lt;p&gt;Run this command to sync the contents of the old bucket to the new bucket&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws s3 sync s3://old-bucket s3://new-bucket&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;remove-the-s3-bucket-from-the-terraform-state&quot;&gt;Remove the S3 bucket from the terraform state&lt;/h4&gt;

    &lt;p&gt;Assuming this is your terraform code to create S3 bucket&lt;/p&gt;

    &lt;pre&gt;&lt;code class=&quot;language-hcl-terraform&quot;&gt;  resource &quot;aws_s3_bucket&quot; &quot;demo_bucket&quot; {
    bucket = &quot;old-bucket&quot;
  }
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;Run the following command to remove the above resource from the terraform state.
This will make terraform to stop tracking this bucket though the resource is present. 
We will be adding again with the new bucket created.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform state rm aws_s3_bucket.demo_bucket&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;change-the-bucket-name-in-terraform-code&quot;&gt;Change the bucket name in terraform code&lt;/h4&gt;

    &lt;pre&gt;&lt;code class=&quot;language-hcl-terraform&quot;&gt;  resource &quot;aws_s3_bucket&quot; &quot;demo_bucket&quot; {
    bucket = &quot;new-bucket&quot;  // Change from old-bucket to new-bucket
  }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;import-new-bucket-to-the-terraform-state&quot;&gt;Import new bucket to the terraform state&lt;/h4&gt;

    &lt;p&gt;Provide the terraform resource and the bucket name&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform import aws_s3_bucket.demo_bucket new-bucket&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;This will allow terraform state to track the new bucket and reflect the changes if any&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;terraform-apply&quot;&gt;Terraform apply&lt;/h4&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform apply&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;delete-old-bucket&quot;&gt;Delete old bucket&lt;/h4&gt;

    &lt;p&gt;Verify if all the contents are present in the new bucket and delete the old bucket from the AWS Console.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 15 Aug 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/tech/2020/08/15/rename-s3-bucket-in-terraform.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/tech/2020/08/15/rename-s3-bucket-in-terraform.html</guid>
        
        <category>aws</category>
        
        <category>s3</category>
        
        <category>terraform</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Run Nodejs and Mongo application on RaspberryPi running Ubuntu 20.04 using Docker and Docker Compose</title>
        <description>&lt;p&gt;Sub post of &lt;a href=&quot;deploy-nodejs-and-mongodb-application-on-a-raspberrypi&quot;&gt;Deploy Nodejs 12 and Mongodb 4.4 application on a RaspberryPi&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Prev:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-docker-and-docker-compose-on-ubuntu-raspberrypi.html&quot;&gt;Install Docker and Docker Compose on a RaspberryPi running Ubuntu 20.04&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We are going to Dockerise the application and run it in the RaspberryPi using docker compose in this post.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;dockerising-the-application&quot;&gt;Dockerising the application&lt;/h5&gt;

    &lt;p&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; from base image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arm64v8/node&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Example:&lt;/p&gt;
    &lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; arm64v8/node:latest&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /usr/src/app
&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /usr/src/app&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; . /usr/src/app&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;EXPOSE&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 8080&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [ &quot;npm&quot;, &quot;start&quot; ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;docker-compose-with-mongodb&quot;&gt;Docker compose with mongodb&lt;/h5&gt;

    &lt;p&gt;Create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file combining the node application and mongodb&lt;/p&gt;

    &lt;p&gt;Example:&lt;/p&gt;
    &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 
  &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;your-container-name&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;8080:8080&quot;&lt;/span&gt; 
      &lt;span class=&quot;na&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mongo&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DB_URL=mongodb://mongo:27017&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mongo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mongo&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mongo&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./data:/data/db&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;27017:27017&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;In the above file,&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;We are building the application image from the Dockerfile we created in the first step.&lt;/li&gt;
      &lt;li&gt;Pass any environment variables you want. Example: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DB_URL&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Mounting the volume for mongo container. Host &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./data&lt;/code&gt; (Change it according to your use case) is mounted to docker’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/db&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Exposing ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8080&lt;/code&gt; (Change according to your application) for application and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;27017&lt;/code&gt; for mongo database.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;running-the-application-on-raspberrypi&quot;&gt;Running the application on RaspberryPi&lt;/h5&gt;

    &lt;ul&gt;
      &lt;li&gt;SSH into pi&lt;/li&gt;
      &lt;li&gt;Clone your repository in a directory you want&lt;/li&gt;
      &lt;li&gt;Go to the repository using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose up -d&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;This will build your application docker image and run the app and mongo db containers in detach mode.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;why-to-build-the-image-in-pi-and-why-not-on-docker-hub&quot;&gt;Why to build the image in Pi and why not on Docker Hub?&lt;/h5&gt;

    &lt;p&gt;We are using arm64 nodejs image and it cannot be built in docker hub. 
We will have to use cross-build container to do it. I have choose to build the image in Pi.
Hence, did not explore that path.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;thats-it&quot;&gt;That’s it&lt;/h4&gt;

    &lt;p&gt;Now, You have your NodeJS and MongoDB application running on a RaspberryPi&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Prev:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-docker-and-docker-compose-on-ubuntu-raspberrypi.html&quot;&gt;Install Docker and Docker Compose on a RaspberryPi running Ubuntu 20.04&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sun, 09 Aug 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/run-nodejs-mongo-application-on-rasberrypi.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/run-nodejs-mongo-application-on-rasberrypi.html</guid>
        
        <category>tech</category>
        
        <category>raspberrypi</category>
        
        <category>ubuntu</category>
        
        <category>docker</category>
        
        
        <category>deploy-nodejs-application-on-a-raspberrypi</category>
        
      </item>
    
      <item>
        <title>Install Ububtu 20.04 Server on a Raspberry Pi 4</title>
        <description>&lt;p&gt;Sub post of &lt;a href=&quot;deploy-nodejs-and-mongodb-application-on-a-raspberrypi&quot;&gt;Deploy Nodejs 12 and Mongodb 4.4 application on a RaspberryPi&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Next:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-docker-and-docker-compose-on-ubuntu-raspberrypi.html&quot;&gt;Install Docker and Docker Compose on a RaspberryPi running Ubuntu 20.04&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s go through the process of installing Ubuntu 20.04, Connect to WiFi, SSH into it and Install desktop (optionally) in this post.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;we-need-to-have-an-imager-to-create-the-bootable-sd-card&quot;&gt;We need to have an imager to create the bootable SD Card.&lt;/h5&gt;

    &lt;p&gt;Download and install the respective imager from &lt;a href=&quot;http://downloads.raspberrypi.org/imager/&quot;&gt;here&lt;/a&gt; (MacOS, Windows, Linux)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;making-bootable-sd-card&quot;&gt;Making bootable SD Card&lt;/h5&gt;

    &lt;ul&gt;
      &lt;li&gt;Insert the SD Card to the computer/laptop&lt;/li&gt;
      &lt;li&gt;Open the imager, You see 3 steps like Choose OS, Choose SD Card, Write&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Select “Choose OS” -&amp;gt; “Ubuntu” -&amp;gt; “Ubuntu 20.04 LTS (Pi 3/4)”&lt;/p&gt;

        &lt;p&gt;Note: Make sure you are selecting the 64 bit OS for arm64 architectures&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Choose the SD card to write&lt;/li&gt;
      &lt;li&gt;Click on “Write”. It will take some time to write into the SD Card&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;connecting-to-wifi&quot;&gt;Connecting to Wifi&lt;/h5&gt;

    &lt;ul&gt;
      &lt;li&gt;Remove and insert the SD again to the computer/laptop&lt;/li&gt;
      &lt;li&gt;Open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;system-boot&lt;/code&gt; drive&lt;/li&gt;
      &lt;li&gt;Edit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network-config&lt;/code&gt; file with your WiFi configuration&lt;/li&gt;
      &lt;li&gt;Uncomment the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wifis&lt;/code&gt; block in the file and add your WiFi credentials
        &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;na&quot;&gt;wifis&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;wlan0&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dhcp4&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;access-points&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;WiFi&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;WiFi&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;Note: Include quotes if there are spaces in the name or password.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Save the file and Eject the SD Card from the computer/laptop.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;booting-the-pi-and-ssh&quot;&gt;Booting the Pi and SSH&lt;/h5&gt;

    &lt;ul&gt;
      &lt;li&gt;Just insert the SD card into the Pi and connect it to the power.&lt;/li&gt;
      &lt;li&gt;It takes around a minute to boot the Pi with the Ubuntu you just installed&lt;/li&gt;
      &lt;li&gt;Find out the IP Address of the Pi&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh ubuntu@&amp;lt;Pi&apos;s IP address&amp;gt;&lt;/code&gt; Example: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh ubuntu@&amp;lt;192.168.0.5&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Confirm the connection by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ubuntu&lt;/code&gt; is the default password for user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ubuntu&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;It will ask to change the password on the first time login&lt;/li&gt;
      &lt;li&gt;Login again with the changed password&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;optional-install-desktop&quot;&gt;Optional: Install desktop&lt;/h4&gt;

    &lt;p&gt;If you want the desktop then, You can install any light weight desktop of your wish.
  I have installed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubuntu-desktop&lt;/code&gt; which is fine but not great.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt upgrade&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install kubuntu-desktop&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo reboot&lt;/code&gt; to reboot the pi and start the desktop&lt;/li&gt;
      &lt;li&gt;Ideally, You new desktop should come up automatically. But in some cases it does not.
   Hence, you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startx&lt;/code&gt; to start the desktop.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boom….. That’s all. You have a RaspberryPi running Ubuntu 64 bit OS in it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Next:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-docker-and-docker-compose-on-ubuntu-raspberrypi.html&quot;&gt;Install Docker and Docker Compose on a RaspberryPi running Ubuntu 20.04&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sun, 09 Aug 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-ububtu-server-on-a-raspberrypi.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-ububtu-server-on-a-raspberrypi.html</guid>
        
        <category>tech</category>
        
        <category>raspberrypi</category>
        
        <category>ubuntu</category>
        
        
        <category>deploy-nodejs-application-on-a-raspberrypi</category>
        
      </item>
    
      <item>
        <title>Install Docker and Docker Compose on a RaspberryPi running Ubuntu 20.04</title>
        <description>&lt;p&gt;Sub post of &lt;a href=&quot;deploy-nodejs-and-mongodb-application-on-a-raspberrypi&quot;&gt;Deploy Nodejs 12 and Mongodb 4.4 application on a RaspberryPi&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Prev:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-ububtu-server-on-a-raspberrypi.html&quot;&gt;Install Ububtu 20.04 Server on a Raspberry Pi 4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Next:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/run-nodejs-mongo-application-on-rasberrypi.html&quot;&gt;Run Nodejs and Mongo application on RaspberryPi running Ubuntu 20.04 using Docker and Docker Compose&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In this post, We will install Docker and Docker Compose on a RaspberryPi running Ubuntu 20.04&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;install-docker&quot;&gt;Install Docker&lt;/h5&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -sSL https://get.docker.com | sh&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;change-permissions&quot;&gt;Change permissions&lt;/h5&gt;

    &lt;p&gt;This will help to run docker commands without using sudo&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo usermod -aG docker pi&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Note: You need to reboot to run docker without sudo&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;install-the-dependencies-for-docker-compose&quot;&gt;Install the dependencies for docker-compose&lt;/h5&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install libffi-dev libssl-dev&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install python3 python3-pip&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;install-docker-compose&quot;&gt;Install docker compose&lt;/h5&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pip3 install docker-compose&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Docker compose installation takes time. If you want to see the feedback then you can run the command with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v&lt;/code&gt; (verbose mode)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;test-docker-and-docker-compose&quot;&gt;Test docker and docker-compose&lt;/h5&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker -v&lt;/code&gt; or you can pull a sample image and run it&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-commpose -v&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Prev:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-ububtu-server-on-a-raspberrypi.html&quot;&gt;Install Ububtu 20.04 Server on a Raspberry Pi 4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Next:&lt;/b&gt; &lt;a href=&quot;/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/run-nodejs-mongo-application-on-rasberrypi.html&quot;&gt;Run Nodejs and Mongo application on RaspberryPi running Ubuntu 20.04 using Docker and Docker Compose&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sun, 09 Aug 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-docker-and-docker-compose-on-ubuntu-raspberrypi.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/install-docker-and-docker-compose-on-ubuntu-raspberrypi.html</guid>
        
        <category>tech</category>
        
        <category>raspberrypi</category>
        
        <category>ubuntu</category>
        
        <category>docker</category>
        
        
        <category>deploy-nodejs-application-on-a-raspberrypi</category>
        
      </item>
    
      <item>
        <title>Deploy Nodejs 12 and Mongodb 4.4 application on a RaspberryPi</title>
        <description>&lt;p&gt;I was excited to buy a RaspberryPi 4 to setup a small own personal server. 
I always wanted to write tools/utils by my own and deploy it on my personal server.
But It turned out to be a stress full thing to deploy my NodeJS 12 and Mongodb 4.4 (anything above 3) on the RaspberryPi 4.
Hence, I have decided to write it down.&lt;/p&gt;

&lt;p&gt;RaspberryPi comes with Raspbian OS installed with it. It is 32 bit OS (Raspbian 64 bit beta is released) and the hardware is arm64 bit architecture.
These are main reasons for me it took long to setup and deploy.
Mongodb does not support 32 bit arm64 architecture in it’s latest versions. You can install very old versions in RaspberryPi (Raspbian 32 bit).
You cannot even use mongo docker image latest versions (https://hub.docker.com/_/mongo) in 32 bit OS. 
Hence, the first thing to do it change the OS in RaspberryPi. I have decided to use Ubuntu Server. (Optionally you can install the desktop in it)&lt;/p&gt;

&lt;h4 id=&quot;step-1-install-ubuntu-server-on-a-raspberrypi-4&quot;&gt;STEP-1: &lt;a href=&quot;install-ububtu-server-on-a-raspberrypi&quot;&gt;Install Ubuntu Server on a RaspberryPi 4&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id=&quot;step-2-install-docker-and-docker-compose-on-a-raspberrypi-running-ubuntu-server&quot;&gt;STEP-2: &lt;a href=&quot;install-docker-and-docker-compose-on-ubuntu-raspberrypi&quot;&gt;Install Docker and Docker Compose on a RaspberryPi running Ubuntu server&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id=&quot;step-3-run-nodejs-and-mongodb-application-on-raspberrypi&quot;&gt;STEP-3: &lt;a href=&quot;run-nodejs-mongo-application-on-rasberrypi&quot;&gt;Run NodeJS and Mongodb application on RaspberryPi&lt;/a&gt;&lt;/h4&gt;

</description>
        <pubDate>Sun, 09 Aug 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/deploy-nodejs-and-mongodb-application-on-a-raspberrypi.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/deploy-nodejs-application-on-a-raspberrypi/2020/08/09/deploy-nodejs-and-mongodb-application-on-a-raspberrypi.html</guid>
        
        <category>tech</category>
        
        <category>nodejs</category>
        
        <category>raspberrypi</category>
        
        <category>mongodb</category>
        
        
        <category>deploy-nodejs-application-on-a-raspberrypi</category>
        
      </item>
    
      <item>
        <title>I was alone...</title>
        <description>&lt;p&gt;I was alone…&lt;/p&gt;

&lt;p&gt;When I was just looking at all the other kids who were playing cricket, I was alone…&lt;/p&gt;

&lt;p&gt;When they form a gang and fight together, I was alone…&lt;/p&gt;

&lt;p&gt;When the whole class laughed at me on my mistakes when my teacher asked me to read a paragraph in the textbook, I was alone…&lt;/p&gt;

&lt;p&gt;When I bunked my school without letting my mother know, I was alone…&lt;/p&gt;

&lt;p&gt;When I stole money to go to a picnic organized by the school, I was alone…&lt;/p&gt;

&lt;p&gt;When I was beaten in front of the whole class by the principal who suspected me as thief though I was innocent, I was alone…&lt;/p&gt;

&lt;p&gt;When I created a fake report card and could not let the truth out, I was alone…&lt;/p&gt;

&lt;p&gt;When my aunt told her daughter not to talk/play with me because I am a bad boy, I was alone…&lt;/p&gt;

&lt;p&gt;When I do all these things without liking them, I was alone…&lt;/p&gt;

&lt;p&gt;When there is no one who can understand what I am going through, I was alone…&lt;/p&gt;

&lt;p&gt;Finally, When I fail, I was alone…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;              &lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;But there is one change, one day, one moment, one small hope…….&lt;/p&gt;

&lt;p&gt;All I need was a small bit of self-confidence which has turned everything.&lt;/p&gt;

&lt;p&gt;Now, I am not alone…&lt;/p&gt;
</description>
        <pubDate>Sat, 09 May 2020 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/non-tech/2020/05/09/i-am-alone.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/non-tech/2020/05/09/i-am-alone.html</guid>
        
        <category>school</category>
        
        <category>childhood</category>
        
        <category>mythoughts</category>
        
        
        <category>non-tech</category>
        
      </item>
    
      <item>
        <title>The biggest change in my life</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.thoughtworks.com/STEP&quot; target=&quot;_blank&quot;&gt;STEP&lt;/a&gt; has changed my life completely. When I was pursuing my last semester of diploma, ThoughtWorks came to my college and presented about STEP, which is a 2 year internship programme for diploma graduates. It is a work while study programme. This was the first time I ever heard about ThoughtWorks. From the presentation I also came to know that STEP sponsors a BCA from Madras University for their Interns. On successful completion of the internship, these interns are hired by ThoughtWorks at a minimum compensation of 5 Lakhs PA. Also there is no hierarchy in ThoughtWorks, no need for formal wear, you could sit any where in the office … Wow! For one second I was in Awe listening to the presentation made. But after a while I started thinking how could it all be so good? Is it all fake or could a company exist like this? All these questions started forming in my mind. Again people started suggesting different things like some said I should give it a try where as some others told I should pursue further studies. But, since I did not have the financial background for further studies, I decided to give STEP a try. The first level was an Aptitude test which I appeared for. Then I started waiting for a call from ThoughtWorks, which I did receive saying that I have been selected for the second level which was the Telephonic interview. By some miracle I did pass through that as well. Then I received a call saying that I have been selected for the final interview at ThoughtWorks Chennai office. I went there with my mom. Seeing the office atmosphere, I was flabbergasted. During the interview, we had a group discussion followed by two rounds of interviews. In my second interview, the questions were mostly on movies and politics. I started wondering and then I got a feedback after the interview that my English was not so good. Therefore I thought that I wouldn’t be selected for the internship. When I got a mail from ThoughtWorks saying that I have been selected for STEP on 25th March 2014, I was dumb struck. That was a memorable day in my life.&lt;/p&gt;

&lt;p&gt;STEP internship started on 1st July 2014. This was the first time I stayed away from Home. I never thought that I would complete these 2 years successfully. But the environment in STEP, the way Vivek Haridas widely know as Swamiji (Our mentor in STEP) hand held us through out these 2 years, time just flew…, without our noticing it.&lt;/p&gt;

&lt;p&gt;The 2 years of STEP have been scheduled into different semesters namely&lt;/p&gt;

&lt;p&gt;8 months - Class room sessions&lt;/p&gt;

&lt;p&gt;6 months - Live project experience&lt;/p&gt;

&lt;p&gt;2 months - Class room sessions&lt;/p&gt;

&lt;p&gt;6 months - Again Project&lt;/p&gt;

&lt;p&gt;2 months - Final class room sessions&lt;/p&gt;

&lt;p&gt;In the first 8 months, We learnt the basics of Programming, English, Math, Javascript, DBMS, C, Data Structures, Java. We have developed some games to learn Agile Project development, TDD and pairing. Our mentors deleted our code so many times for not a having a proper indentation, not having proper variable names or not having tests as well. That made us more focused on proper programming practices. During 3rd semester that is second set of classroom sessions, we learnt Advanced Database concepts and Networking concepts. We did really cool projects like Question paper generator, STEP management tool and English teacher. By doing these projects, we learnt regarding different roles in a project and also management of a project. In the last set of classroom sessions, We learnt about Automata and Operating System concepts. As we were all in different projects, we also shared project experiences, challenges that we faced and the learnings that we got from our projects, with each other.&lt;/p&gt;

&lt;p&gt;The environment of the classroom sessions and the projects were totally different. During projects, we apply all our learnings from the classroom. I was so excited on my first project. I was assigned to a Project. But the project start date got delayed. Still, ThoughtWorkers did not let my excitement down. I got to do some tasks like integrating Mingle (TW product), &lt;a href=&quot;https://www.gocd.org/&quot; target=&quot;_blank&quot;&gt;Go CD&lt;/a&gt; (another TW Product) with &lt;a href=&quot;https://slack.com/&quot; target=&quot;_blank&quot;&gt;Slack&lt;/a&gt;. I really enjoyed those assignments.&lt;/p&gt;

&lt;p&gt;STEP is not only about academics,  we had 3 outbound trainings and a structural thinking workshop. During the outbound, we do physical activities as in teams. There we were taught various things like Team work, Time management, Strategic Planning, Co-ordination etc.,&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/non-tech/outbound.png&quot; title=&quot;Some of our outbound activities&quot; /&gt;
  &lt;figcaption&gt;Some of our outbound activities&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If STEP were to be purely academics then I could not have managed to stay till completion. We do play cricket. I did not know the ABC of Cricket. I held the bat for the first time in my life, after joining STEP. Swamiji once again being our mentor helped us learn the Game. My confidence improved a lot by playing Cricket and this impacted on my work as well. I have explored lot of board games and card games here like Monopoly, Settlers, Battleship, UNO, Cash flow, Mafia, etc., I have learnt to deal with money, people, assess people etc., by playing these games. We went for team outings for Gaming zone and movies. Language was no bar, we used to watched movies of different languages eg., Children of Heaven (Iranian), Life is beautiful, Lucia etc., As STEP interns are from different parts of India, we enjoy celebrating Birthdays, festivals etc., together. We also played pranks on each other.&lt;/p&gt;

&lt;p&gt;Swamiji and Jayanth were our mentors all through the STEP internship. They never treated us as interns but behaved like our parents, treating us like their own kids. They not only taught us technical aspects pertaining to our job but also taught us how to deal with various problems of day to day life.&lt;/p&gt;

&lt;p&gt;Words are not enough for me to explain my journey through STEP internship as an intern. STEP has changed me a lot. My thought process has completely changed. I have learnt how to learn. As a Diploma student, I never even dreamt of becoming an Application Developer or being a part of an MNC any time in future.&lt;/p&gt;

&lt;p&gt;Thank you ThoughtWorks for providing such a great opportunity to us - diploma graduates which no other company in India has until now offered.&lt;/p&gt;

</description>
        <pubDate>Mon, 11 Jul 2016 00:00:00 +0530</pubDate>
        <link>http://maheshkkolla.github.io/non-tech/2016/07/11/the-biggest-change-in-my-life.html</link>
        <guid isPermaLink="true">http://maheshkkolla.github.io/non-tech/2016/07/11/the-biggest-change-in-my-life.html</guid>
        
        <category>thoughtworks</category>
        
        <category>step</category>
        
        
        <category>non-tech</category>
        
      </item>
    
  </channel>
</rss>
